#
# rules.input-after
#
# Rules that should be run after the ufw command line added rules. Custom
# rules should be added to one of these chains:
#   ufw-after-input
#   ufw-after-output
#   ufw-after-forward
#

*filter
:ufw-after-input - [0:0]
:ufw-after-output - [0:0]
:ufw-after-forward - [0:0]

# ============================================================
# docker - Add custom chains (must be defined before use)
# ============================================================
:DOCKER-USER - [0:0]
:ufw-docker-logging-deny - [0:0]
:ufw-user-forward - [0:0]
# ============================================================

# don't log noisy services by default
-A ufw-after-input -p udp --dport 137 -j ufw-skip-to-policy-input
-A ufw-after-input -p udp --dport 138 -j ufw-skip-to-policy-input
-A ufw-after-input -p tcp --dport 139 -j ufw-skip-to-policy-input
-A ufw-after-input -p tcp --dport 445 -j ufw-skip-to-policy-input
-A ufw-after-input -p udp --dport 67 -j ufw-skip-to-policy-input
-A ufw-after-input -p udp --dport 68 -j ufw-skip-to-policy-input

# don't log noisy broadcast
-A ufw-after-input -m addrtype --dst-type BROADCAST -j ufw-skip-to-policy-input

# ============================================================
# docker - DOCKER-USER chain rules
# ============================================================

# 1. Allow established and related connections
-A DOCKER-USER -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# 2. Allow host and Docker internal network (RETURN = pass through)
-A DOCKER-USER -i docker0 -j RETURN
-A DOCKER-USER -s 127.0.0.1 -j RETURN
-A DOCKER-USER -s 10.0.0.0/8 -j RETURN
-A DOCKER-USER -s 172.16.0.0/12 -j RETURN
-A DOCKER-USER -s 192.168.0.0/16 -j RETURN

# 3. Allow DNS responses
-A DOCKER-USER -p udp -m udp --sport 53 --dport 1024:65535 -j RETURN

# 4. Container port access rules (add your rules here)
-A DOCKER-USER -p tcp -m tcp --dport 80 -s 173.245.48.0/20 -j RETURN

# 5. Block container from scanning host private networks
-A DOCKER-USER -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 192.168.0.0/16 -j ufw-docker-logging-deny
-A DOCKER-USER -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 10.0.0.0/8 -j ufw-docker-logging-deny
-A DOCKER-USER -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 172.16.0.0/12 -j ufw-docker-logging-deny
-A DOCKER-USER -p udp --dport 0:32767 -d 192.168.0.0/16 -j ufw-docker-logging-deny
-A DOCKER-USER -p udp --dport 0:32767 -d 10.0.0.0/8 -j ufw-docker-logging-deny
-A DOCKER-USER -p udp --dport 0:32767 -d 172.16.0.0/12 -j ufw-docker-logging-deny

# 6. Pass other outbound container traffic to UFW forward processing
-A DOCKER-USER -j ufw-user-forward

# 7. Return to main chain after processing
-A DOCKER-USER -j RETURN

# 8. ufw-docker-logging-deny logging and drop
-A ufw-docker-logging-deny -m limit --limit 3/min --limit-burst 10 -j LOG --log-prefix "[UFW DOCKER BLOCK] "
-A ufw-docker-logging-deny -j DROP

# ============================================================
# docker - End of DOCKER-USER chain rules
# ============================================================

COMMIT